version: "3.4"

services:
  nginx:
    image: dynamedia/docker-nginx:v1.17.3
    env_file:
      - .env
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy : "true"
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./.data/conf.d:/etc/nginx/conf.d
      - ./.data/certs:/etc/nginx/certs:ro
      - ./.data/vhosts:/etc/nginx/vhost.d
      - ./.data/html:/usr/share/nginx/html
      - ./modsecurity/REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf.example:/etc/nginx/modsecurity.d/rules/REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf
      - ./modsecurity/RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf.example:/etc/modsecurity.d/rules/RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf

  nginx-gen:
    image: jwilder/docker-gen:latest
    command: -notify-sighup nginx-proxy -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    container_name: nginx-proxy-gen
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.docker_gen : "true"
    restart: always
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl
      - ./.data/conf.d:/etc/nginx/conf.d
      - ./.data/certs:/etc/nginx/certs
      - ./.data/vhosts:/etc/nginx/vhost.d
      - ./.data/html:/usr/share/nginx/html

  letsencrypt-nginx-proxy-companion:
    image: nginxproxy/acme-companion:latest
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./.data/conf.d:/etc/nginx/conf.d
      - ./.data/certs:/etc/nginx/certs
      - ./.data/vhosts:/etc/nginx/vhost.d
      - ./.data/html:/usr/share/nginx/html
      - ./.data/acme.sh:/etc/acme.sh

networks:
  default:
    external:
      name: reverse-proxy
